{"version":3,"file":"inject.js","sourceRoot":"","sources":["../../src/inject.ts"],"names":[],"mappings":";;AAAA,mCAAwE;AAGxE,SAAgB,MAAM,CAAC,UAAmC;IACxD,OAAO,CAAC,MAAW,EAAE,WAAoB,EAAE,KAAc,EAAE,EAAE;QAC3D,MAAM,eAAe,GAAG,OAAO,CAAC,WAAW,CAAC,yBAAiB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;QAC7E,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,qBAAa,EAAE,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;QAC5F,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE;YACtC,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAChC,eAAe,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;aACrC;SACF;aAAM;YACL,MAAM,UAAU,GAAG,UAAU,IAAI,OAAO,CAAC,WAAW,CAAC,mBAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACvF,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACrE,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAChC;QACD,OAAO,CAAC,cAAc,CAAC,yBAAiB,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;QACnE,OAAO,CAAC,cAAc,CAAC,qBAAa,EAAE,YAAY,EAAE,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,CAAC;QAClF,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AAjBD,wBAiBC;AACD,SAAgB,cAAc,CAG5B,GAAG,YAA0B;IAC7B,OAAO,CAAC,MAAU,EAAO,EAAE;QACzB,OAAO,CAAC,cAAc,CAAC,yBAAiB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QAChE,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC;AARD,wCAQC","sourcesContent":["import { DESIGN_PARAMTYPES, DESIGN_TYPE, PROPERTY_KEYS } from './utils';\nimport { ServiceIdentifier, Instances } from './types';\n\nexport function Inject(dependency?: ServiceIdentifier<any>) {\n  return (target: any, propertyKey?: string, index?: number) => {\n    const allDependencies = Reflect.getMetadata(DESIGN_PARAMTYPES, target) || [];\n    const propertyKeys = Reflect.getMetadata(PROPERTY_KEYS, target.constructor || target) || [];\n    if (typeof propertyKey === 'undefined') {\n      if (typeof index !== 'undefined') {\n        allDependencies[index] = dependency;\n      }\n    } else {\n      const designType = dependency || Reflect.getMetadata(DESIGN_TYPE, target, propertyKey);\n      Reflect.defineMetadata(DESIGN_TYPE, designType, target, propertyKey);\n      propertyKeys.push(propertyKey);\n    }\n    Reflect.defineMetadata(DESIGN_PARAMTYPES, allDependencies, target);\n    Reflect.defineMetadata(PROPERTY_KEYS, propertyKeys, target.constructor || target);\n    return target;\n  };\n}\nexport function InjectFunction<\n  Dependencies extends Array<ServiceIdentifier<any>>,\n  Fn extends (...args: Instances<Dependencies>) => any\n>(...dependencies: Dependencies) {\n  return (target: Fn): any => {\n    Reflect.defineMetadata(DESIGN_PARAMTYPES, dependencies, target);\n    return target;\n  };\n}\n"]}
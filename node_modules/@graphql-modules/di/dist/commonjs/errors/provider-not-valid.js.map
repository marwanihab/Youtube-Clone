{"version":3,"file":"provider-not-valid.js","sourceRoot":"","sources":["../../../src/errors/provider-not-valid.ts"],"names":[],"mappings":";;AAAA,0BAAiE;AAEjE,MAAa,qBAAyB,SAAQ,KAAK;IACjD,YAAoB,WAAmB,EAAU,kBAAwC;QACvF,KAAK,CAAC;;mBAES,WAAW,mCAAmC,4BAAwB,CAAC,kBAAkB,CAAC;;;;;KAKxG,CAAC,CAAC;QARe,gBAAW,GAAX,WAAW,CAAQ;QAAU,uBAAkB,GAAlB,kBAAkB,CAAsB;QASvF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,CAAC;QAC7D,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;IACvD,CAAC;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;CACF;AApBD,sDAoBC","sourcesContent":["import { ServiceIdentifier, getServiceIdentifierName } from '..';\n\nexport class ProviderNotValidError<T> extends Error {\n  constructor(private _moduleName: string, private _serviceIdentifier: ServiceIdentifier<T>) {\n    super(`\n      GraphQL-Modules Error: Provider is not valid!\n      - #Module #${_moduleName} provides an invalid #Provider #${getServiceIdentifierName(_serviceIdentifier)}!\n\n      Possible solutions:\n      - Provider must be a class itself,\n        or provides a valid identifier with 'useValue', 'useFactory' or 'useClass'.\n    `);\n    Object.setPrototypeOf(this, ProviderNotValidError.prototype);\n    Error.captureStackTrace(this, ProviderNotValidError);\n  }\n  get moduleName() {\n    return this._moduleName;\n  }\n\n  get serviceIdentifier(): ServiceIdentifier<T> {\n    return this._serviceIdentifier;\n  }\n}\n"]}
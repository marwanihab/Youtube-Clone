"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
class ProviderNotValidError extends Error {
    constructor(_moduleName, _serviceIdentifier) {
        super(`
      GraphQL-Modules Error: Provider is not valid!
      - #Module #${_moduleName} provides an invalid #Provider #${__1.getServiceIdentifierName(_serviceIdentifier)}!

      Possible solutions:
      - Provider must be a class itself,
        or provides a valid identifier with 'useValue', 'useFactory' or 'useClass'.
    `);
        this._moduleName = _moduleName;
        this._serviceIdentifier = _serviceIdentifier;
        Object.setPrototypeOf(this, ProviderNotValidError.prototype);
        Error.captureStackTrace(this, ProviderNotValidError);
    }
    get moduleName() {
        return this._moduleName;
    }
    get serviceIdentifier() {
        return this._serviceIdentifier;
    }
}
exports.ProviderNotValidError = ProviderNotValidError;
//# sourceMappingURL=provider-not-valid.js.map
export const DESIGN_PARAMTYPES = 'design:paramtypes';
export const DESIGN_TYPE = 'design:type';
export const PROVIDER_OPTIONS = 'provider-options';
export const PROPERTY_KEYS = 'property-keys';
export function getServiceIdentifierName(serviceIdentifier) {
    if (typeof serviceIdentifier === 'function' && isType(serviceIdentifier)) {
        return serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier !== 'undefined') {
        return serviceIdentifier.toString();
    }
    else {
        return 'undefined';
    }
}
export function isType(v) {
    return typeof v === 'function' && 'prototype' in v;
}
export function isTypeProvider(v) {
    return isType(v);
}
export function isValueProvider(v) {
    return 'useValue' in v;
}
export function isClassProvider(v) {
    return 'useClass' in v && isType(v.useClass);
}
export function isFactoryProvider(v) {
    return 'useFactory' in v && typeof v.useFactory === 'function';
}
//# sourceMappingURL=utils.js.map
{"version":3,"file":"injectable.js","sourceRoot":"","sources":["../../src/injectable.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAG7E,MAAM,UAAU,UAAU,CAAC,UAA2B,EAAE;IACtD,OAAO,MAAM,CAAC,EAAE;QACd,MAAM,wBAAwB,GAAG,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC;QACtF,OAAO,CAAC,cAAc,CAAC,iBAAiB,EAAE,wBAAwB,EAAE,MAAM,CAAC,CAAC;QAC5E,OAAO,CAAC,cAAc,CAAC,gBAAgB,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1D,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAClF,OAAO,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACxE,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { DESIGN_PARAMTYPES, PROVIDER_OPTIONS, PROPERTY_KEYS } from './utils';\nimport { ProviderOptions } from './types';\n\nexport function Injectable(options: ProviderOptions = {}): ClassDecorator {\n  return target => {\n    const existingDesignParamTypes = Reflect.getMetadata(DESIGN_PARAMTYPES, target) || [];\n    Reflect.defineMetadata(DESIGN_PARAMTYPES, existingDesignParamTypes, target);\n    Reflect.defineMetadata(PROVIDER_OPTIONS, options, target);\n    const propertyKeys = Reflect.getMetadata(PROPERTY_KEYS, target.constructor) || [];\n    Reflect.defineMetadata(PROPERTY_KEYS, propertyKeys, target.constructor);\n    return target;\n  };\n}\n"]}
import { GraphQLModule } from './graphql-module';
import { ModuleContext } from './types';
export declare class ModuleSessionInfo<Config = any, Session extends object = any, Context = any> {
    private _module;
    private _session;
    constructor(_module: GraphQLModule<Config, Session, Context>, _session: Session);
    readonly module: GraphQLModule<Config, Session, Context, Partial<{
        [key: string]: import("graphql").GraphQLScalarType | import("@kamilkisiela/graphql-tools").IEnumResolver | (() => any) | Partial<import("@kamilkisiela/graphql-tools").IResolverObject<any, ModuleContext<Context>, any>> | import("@kamilkisiela/graphql-tools").IResolverOptions<any, ModuleContext<Context>, any>;
    }>>;
    readonly session: Session;
    readonly cache: import("apollo-server-caching").KeyValueCache<string>;
    context: ModuleContext<Context>;
    readonly injector: import("@graphql-modules/di").Injector<Session>;
    readonly injectorAsync: Promise<import("@graphql-modules/di").Injector<Session>>;
    readonly config: Config;
    readonly name: string;
}

let appModule,createTestClient,ApolloServer,Models,connectDb,disconnectDb,expect,gql,authenticate,hashPassword;_7bc‍.w("../../modules/app",[["default",["appModule"],function(v){appModule=v}]]);_7bc‍.w("apollo-server-testing",[["createTestClient",["createTestClient"],function(v){createTestClient=v}]]);_7bc‍.w("apollo-server",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}],["gql",["gql"],function(v){gql=v}]]);_7bc‍.w("../db-test",[["Models",["Models"],function(v){Models=v}],["connectDb",["connectDb"],function(v){connectDb=v}],["disconnectDb",["disconnectDb"],function(v){disconnectDb=v}]]);_7bc‍.w("chai",[["expect",["expect"],function(v){expect=v}]]);_7bc‍.w("../../auth",[["authenticate",["authenticate"],function(v){authenticate=v}],["hashPassword",["hashPassword"],function(v){hashPassword=v}]]);_7bc‍.w("mocha");








const server = new (_7bc‍.a("ApolloServer",ApolloServer))({
    schema:  _7bc‍.a("appModule",appModule).schema,
    context: () => ({ token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RVc2VyIiwiaWF0IjoxNTc1NDI2NzI2fQ.kWQQdaUWlUmY40dkZ4igKQ0Ml_BwrLVdoQebkqsZOVU' })
    }) 

const { query, mutate } = _7bc‍.a("createTestClient",createTestClient)(server)  
  
before(function (){
    _7bc‍.a("connectDb",connectDb)()
})
after(function(){_7bc‍.a("disconnectDb",disconnectDb)()})

describe('Running integration tests of the user', function() {
    this.timeout(10000)

    it('should login user', async() =>{
     password = _7bc‍.a("hashPassword",hashPassword)("M123456?m") 
     const user = await _7bc‍.a("Models",Models).user.create({username:'testUser', password:password})
     
     await user.save()

     const mutation = gql `
      mutation logIn{
        login(username: "testUser", password:"M123456?m"){
          token
          username
        }
      }
     `
     const res = await mutate(
           {mutation : mutation}
         )
     _7bc‍.g.console.log(res)    
     _7bc‍.a("expect",expect)(res.data.login.username).to.equal('testUser')

     
    
    })
})
    